EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Xinchao$.exe -- emu8086 assembler version: 4.08  
 
[ 10/23/2023  --  8:25:45 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;bai 1: in ra chuoi ki tu da cho
[   2]        :                                       ;bai 2: in ra dong ho va ten sinh vien, dong 2 in ra ma so sinh vien
[   3]        :                                       ;bài 3: nhap vao ki tu tu ban phim, in ki tu da nhap ra
[   4]        :                                       ;bai 4: nhap vào 1 ki tu in thuong tu ban phim, chuyen thanh in hoa in ra
[   5]        :                                       ;bai 5: nhap vao chuoi ki tu bat ki, in chuoi ki tu da nhap
[   6]        :                                       ;bai 6:nhap mot chuoi bat kì, co ca in hoa và in thuong
[   7]        :                                       .Model small
[   8]        :                                       .stack 100h
[   9]        :                                       .data
[  10]    0100: 78 69 6E 20 63 68 61 6F 20 24         tb1 db 'xin chao $'
[  11]        :                                       .code
[  12]        :                                       ;lay du lieu tu data vao thanh ghi ds:
[  13]    0110: B8 10 00                              Mov ax, @data
[  14]    0113: 8E D8                                 mov ds, ax
[  15]        :                                       ;in ra dong tb1:
[  16]    0115: B4 09                                 mov ah, 9h
[  17]    0117: BA 00 00                              lea dx, tb1
[  18]    011A: CD 21                                 int 21h
[  19]        :                                       ;thoat khoi chuong trinh:
[  20]    011C: B4 4C                                 mov ah, 4ch
[  21]    011E: CD 21                                 int 21h
[  22]        :                                       end
[  23]        :                                       
[  24]        :                                       
[  25]        :                                       
[  26]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 20      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 7D      -   check sum (l.byte)
0013: 55      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 11      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 11      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
